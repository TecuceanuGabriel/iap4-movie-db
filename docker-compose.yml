services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:5000
    networks:
      - client-server-network
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
        - action: rebuild
          path: ./frontend/node_modules

  backend:
    build:
      context: ./backend
    ports:
      - "5000:5000"
    depends_on:
      - mongo
      - redis
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=development
      - MONGO_URI=mongodb://root:root@mongo:27017/data@?authSource=admin
      - TMDB_BASE_URL=https://api.themoviedb.org/3
      - SCHEDULER_API_ENABLED=True
      - SCHEDULER_TIMEZONE=UTC
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - client-server-network
      - server-database-network
      - faker-network
    develop:
      watch:
        - action: sync+restart
          path: ./backend
          target: /app
        - action: rebuild
          path: ./backend/requirements.txt

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./database:/data/db
      - ./database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - server-database-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=data

  redis:
    build:
      context: ./redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - faker-network

  faker:
    build:
      context: ./faker
    volumes:
      - ./logs:/app/logs
    depends_on:
      - backend
    networks:
      - client-server-network
    environment:
      - BASE_URL=http://backend:5000
      - USER_COUNT=10


volumes:
  redis-data:
    driver: local


networks:
  client-server-network:
    driver: bridge
  server-database-network:
    driver: bridge
  faker-network:
    driver: bridge
